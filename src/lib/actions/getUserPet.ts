"use server";
import { prisma } from "@/lib/prisma";

export async function getUserPet(ownerId: string | null) {
  if (!ownerId) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");

  try {
    const pets = await prisma.pet.findMany({
      where: { ownerId },
      orderBy: { createdAt: "asc" },
      select: {
        id: true,
        ownerId: true,
        name: true,
        type: true,
        breed: true,
        birthDate: true,
        heightCm: true,
        weightKg: true,
        photoUrl: true,
        notes: true,
        awards: {
          orderBy: { date: "desc" },
          select: {
            id: true,
            title: true,
            event: true,
            date: true,
            rank: true,
          },
        },
      },
    });

    console.log("üêæ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü—ã:", pets); // ‚úÖ –í–æ—Ç —Å—é–¥–∞

    return pets;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–∏—Ç–æ–º—Ü–µ–≤:", error);
    throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Ç–æ–º—Ü–µ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
  }
}
