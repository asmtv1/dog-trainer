import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";
import { getToken } from "next-auth/jwt";

export async function middleware(request: NextRequest) {
  const token = await getToken({ req: request });

  const { pathname } = request.nextUrl;
  console.log("üåê middleware caught request to:", pathname); // ‚Üê –¥–æ–±–∞–≤—å —ç—Ç–æ

  // –†–∞–∑—Ä–µ—à–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const isPublic =
    pathname === "/" ||
    pathname.startsWith("/auth/login") ||
    pathname.startsWith("/auth/register") ||
    pathname.startsWith("/api/auth"); // —Å–∞–º NextAuth API

  if (isPublic) {
    console.log("‚úÖ Public route, allow");
    return NextResponse.next();
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é
  if (!token) {
    console.log("‚õî No token, redirecting");
    return NextResponse.redirect(new URL("/", request.url));
  }

  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
  console.log("üîì Token found, allow");
  return NextResponse.next();
}

// –ü—Ä–∏–º–µ–Ω—è–µ–º middleware –∫–æ –≤—Å–µ–º –º–∞—Ä—à—Ä—É—Ç–∞–º, –∫—Ä–æ–º–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
//–≠—Ç–∞ –≤–µ—Ä—Å–∏—è –∏—Å–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é, –∞ —Ç–∞–∫–∂–µ –º–∞—Ä—à—Ä—É—Ç—ã /auth –∏ API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. (gpt —Ç–∞–∫ –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞–ª)
export const config = {
  matcher: [
    "/((?!_next/static|_next/image|favicon.ico|.*\\.png$|.*\\.jpg$|.*\\.svg$|.*\\.webp$|auth|api/auth).*)",
  ],
};
